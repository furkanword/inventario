// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(InventarioContext))]
    partial class InventarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Bodega", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("Id");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("Created_at");

                    b.Property<long>("Created_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("Created_by");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("Deleted_at");

                    b.Property<sbyte>("Estado")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("Estado");

                    b.Property<long>("Id_responsable")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("Id_responsable");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nombre");

                    b.Property<long>("Update_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("update_by");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("update_at");

                    b.HasKey("Id");

                    b.HasIndex("Created_by");

                    b.HasIndex("Id_responsable");

                    b.HasIndex("Update_by");

                    b.ToTable("Bodegas", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Historial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("Id");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int(20)")
                        .HasColumnName("Cantidad");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<long>("Created_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<long>("Id_bodega_destino")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id_bodega_destino");

                    b.Property<long>("Id_bodega_origen")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id_bodega_origen");

                    b.Property<long>("Id_inventario")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id_inventario");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<long>("Updated_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Created_by");

                    b.HasIndex("Id_bodega_destino");

                    b.HasIndex("Id_bodega_origen");

                    b.HasIndex("Id_inventario");

                    b.HasIndex("Updated_by");

                    b.ToTable("Historial", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Inventario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int(20)")
                        .HasColumnName("cantidad");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<long>("Created_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<long>("Id_bodega")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id_bodega");

                    b.Property<long>("Id_producto")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id_producto");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<long>("Updated_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Created_by");

                    b.HasIndex("Id_bodega");

                    b.HasIndex("Id_producto");

                    b.HasIndex("Updated_by");

                    b.ToTable("Inventarios", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Created_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<sbyte>("Estado")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Updated_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.HasIndex("Created_by");

                    b.HasIndex("Updated_by");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<sbyte>("Created_by")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Deleted_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Email_verified_at")
                        .HasColumnType("longtext")
                        .HasColumnName("email_validate_at");

                    b.Property<sbyte>("Estado")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("estado");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<long>("Updated_by")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Bodega", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatorUser")
                        .WithMany("Bodegas")
                        .HasForeignKey("Created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "ResponsableUser")
                        .WithMany("BodegasResponsable")
                        .HasForeignKey("Id_responsable")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "UpdatedUser")
                        .WithMany("BodegasUpdated")
                        .HasForeignKey("Update_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorUser");

                    b.Navigation("ResponsableUser");

                    b.Navigation("UpdatedUser");
                });

            modelBuilder.Entity("Core.Entities.Historial", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatorUser")
                        .WithMany("Historiales")
                        .HasForeignKey("Created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Bodega", "BodegaDestino")
                        .WithMany("HistorialesDestino")
                        .HasForeignKey("Id_bodega_destino")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Bodega", "BodegaOrigen")
                        .WithMany("Historiales")
                        .HasForeignKey("Id_bodega_origen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Inventario", "Inventario")
                        .WithMany("Historiales")
                        .HasForeignKey("Id_inventario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "UpdaterUser")
                        .WithMany("HistorialesUpdated")
                        .HasForeignKey("Updated_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BodegaDestino");

                    b.Navigation("BodegaOrigen");

                    b.Navigation("CreatorUser");

                    b.Navigation("Inventario");

                    b.Navigation("UpdaterUser");
                });

            modelBuilder.Entity("Core.Entities.Inventario", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatorUser")
                        .WithMany("Inventarios")
                        .HasForeignKey("Created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Bodega", "Bodega")
                        .WithMany("Inventarios")
                        .HasForeignKey("Id_bodega")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Producto", "Producto")
                        .WithMany("Inventarios")
                        .HasForeignKey("Id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "UpdatedUser")
                        .WithMany("InventariosUpdated")
                        .HasForeignKey("Updated_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bodega");

                    b.Navigation("CreatorUser");

                    b.Navigation("Producto");

                    b.Navigation("UpdatedUser");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.HasOne("Core.Entities.User", "CreatorUser")
                        .WithMany("Productos")
                        .HasForeignKey("Created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "UpdaterUser")
                        .WithMany("ProductosUpdated")
                        .HasForeignKey("Updated_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorUser");

                    b.Navigation("UpdaterUser");
                });

            modelBuilder.Entity("Core.Entities.Bodega", b =>
                {
                    b.Navigation("Historiales");

                    b.Navigation("HistorialesDestino");

                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Core.Entities.Inventario", b =>
                {
                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("Core.Entities.Producto", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Navigation("Bodegas");

                    b.Navigation("BodegasResponsable");

                    b.Navigation("BodegasUpdated");

                    b.Navigation("Historiales");

                    b.Navigation("HistorialesUpdated");

                    b.Navigation("Inventarios");

                    b.Navigation("InventariosUpdated");

                    b.Navigation("Productos");

                    b.Navigation("ProductosUpdated");
                });
#pragma warning restore 612, 618
        }
    }
}
